# Generated by Django 2.2.6 on 2020-02-05 11:31

import app.models
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.crypto


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('FirstName', models.CharField(max_length=300)),
                ('SecondName', models.CharField(max_length=300)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to=app.models.file_upload)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
                ('password_reset_code', models.CharField(blank=True, max_length=10, null=True)),
                ('mobile', models.CharField(blank=True, max_length=15, null=True)),
                ('key', models.CharField(blank=True, default=django.utils.crypto.get_random_string, max_length=500, null=True, unique=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
                ('description', models.TextField()),
                ('price', models.FloatField()),
                ('yearly_price', models.FloatField(default=1.0)),
                ('period', models.CharField(choices=[('Monthly', 'Monthly'), ('Yearly', 'Yearly')], default='Monthly', max_length=200)),
                ('currency', models.CharField(default='EGP', max_length=200)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_gold', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='SessionClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('description', models.TextField()),
                ('start_date', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True)),
                ('end_date', models.DateField(blank=True, default=datetime.date.today, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('description', models.TextField()),
                ('max_seats', models.IntegerField(default=1)),
                ('current_seats', models.IntegerField(default=0)),
                ('start_date', models.DateTimeField(default=datetime.datetime.now)),
                ('end_date', models.DateField(default=datetime.date.today)),
                ('classes', models.ManyToManyField(blank=True, null=True, related_name='session_classes', to='app.SessionClass')),
                ('coach', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='session_coach', to=settings.AUTH_USER_MODEL)),
                ('users', models.ManyToManyField(blank=True, null=True, related_name='attendees', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PackageCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('picture', models.ImageField(blank=True, null=True, upload_to=app.models.file_upload)),
                ('packages', models.ManyToManyField(blank=True, null=True, related_name='packages', to='app.Package')),
            ],
        ),
        migrations.AddField(
            model_name='package',
            name='sessions',
            field=models.ManyToManyField(blank=True, null=True, related_name='sessions', to='app.Session'),
        ),
        migrations.AddField(
            model_name='package',
            name='user',
            field=models.ManyToManyField(blank=True, null=True, related_name='user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now=True)),
                ('direction', models.CharField(blank=True, default='in', max_length=20, null=True)),
                ('from_gates', models.BooleanField(default=False)),
                ('coach', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='attendance_coach', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='attendance_session', to='app.Session')),
                ('session_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='attendance_class_session', to='app.SessionClass')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='attendance_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
